<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Gigi Sung&#39;s Workspace</title>
<link>https://gigisung0503.github.io/research/</link>
<atom:link href="https://gigisung0503.github.io/research/index.xml" rel="self" type="application/rss+xml"/>
<description>Not-so daily logging of my research development</description>
<generator>quarto-1.4.551</generator>
<lastBuildDate>Thu, 01 Jan 2099 05:00:00 GMT</lastBuildDate>
<item>
  <title>Useful Resources</title>
  <dc:creator>Gigi Sung</dc:creator>
  <link>https://gigisung0503.github.io/research/posts/useful_resources.html</link>
  <description><![CDATA[ 




<section id="useful-resources" class="level1">
<h1>Useful Resources</h1>
<p>This page contains a collection of useful resources for data science, machine learning, and artificial intelligence. The resources include books, courses, tutorials, tools, and more to help you learn and grow in the field of data science.</p>
<ol type="1">
<li><strong>Books</strong>
<ul>
<li><a href="https://www.oreilly.com/library/view/python-for-data/9781491957653/">Python for Data Analysis</a> by Wes McKinney</li>
<li><a href="https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632/">Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow</a> by Aur√©lien G√©ron</li>
<li><a href="https://www.deeplearningbook.org/">Deep Learning</a> by Ian Goodfellow, Yoshua Bengio, and Aaron Courville</li>
<li><a href="https://www.microsoft.com/en-us/research/publication/pattern-recognition-machine-learning/">Pattern Recognition and Machine Learning</a> by Christopher M. Bishop</li>
<li><a href="https://www.oreilly.com/library/view/data-science-for/9781449374280/">Data Science for Business</a> by Foster Provost and Tom Fawcett <br><br></li>
</ul></li>
<li><strong>Courses &amp; Tutorials</strong>
<ul>
<li><a href="https://www.coursera.org/learn/machine-learning">Machine Learning</a> by Andrew Ng on Coursera</li>
<li><a href="https://www.tensorflow.org/tutorials">TensorFlow Tutorials</a> - Official TensorFlow tutorials for beginners and experts</li>
<li><a href="https://www.youtube.com/c/QiushengWu">Dr.&nbsp;Qiusheng Wu‚Äôs YouTube Channel</a> - Various tutorials on GIS, remote sensing, and Python programming</li>
<li><a href="https://github.com/mafichman/MUSA_508_Lab">Upenn‚Äôs MUSA 508 Lab</a> - Tutorials and Materials for MUSA 508 - Public Policy Analytics - University of Pennsylvania Weitzman School of Design <br><br></li>
</ul></li>
<li><strong>People</strong>
<ul>
<li><a href="https://github.com/annaduan09">Anna Duan</a> - MUSA</li>
</ul></li>
</ol>


</section>

 ]]></description>
  <guid>https://gigisung0503.github.io/research/posts/useful_resources.html</guid>
  <pubDate>Thu, 01 Jan 2099 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Automated Literature Review</title>
  <dc:creator>Gigi Sung</dc:creator>
  <link>https://gigisung0503.github.io/research/posts/lit_review.html</link>
  <description><![CDATA[ 




<p>Yup. A literature review could be dragging and ineffective without systematic tools. This post will introduce a prompt that can help you automate the process of literature review.</p>
<p><em>p.s. My neoliberal self told me to include LinkedIn post in the prompt. Feel free to remove it if you don‚Äôt like it.</em></p>
<section id="automated-literature-review-prompt" class="level3">
<h3 class="anchored" data-anchor-id="automated-literature-review-prompt">Automated Literature Review Prompt</h3>
<p><strong>Prompt:</strong></p>
<pre><code>You are tasked with performing an automated literature review. For each provided article, extract key insights, cite the exact source or wording from the article, and explain the relevance to the specified research project. Additionally, create a short, insightful LinkedIn post sharing insights from the given article.

#### Article Text:
[Insert article text here]

#### Research Project Description:
[Insert research project description here]

#### Key Insights:
1. **Insight 1**: [Extracted key insight]
   - **Citation**: [Exact wording or paragraph from the article]

2. **Insight 2**: [Extracted key insight]
   - **Citation**: [Exact wording or paragraph from the article]

3. **Insight 3**: [Extracted key insight]
   - **Citation**: [Exact wording or paragraph from the article]

#### Relevance to Research Project:
- **Relevance 1**: [Explanation of relevance of Insight 1 to the research project]
- **Relevance 2**: [Explanation of relevance of Insight 2 to the research project]
- **Relevance 3**: [Explanation of relevance of Insight 3 to the research project]

#### LinkedIn Post:</code></pre>
<hr>
</section>
<section id="example-usage-of-the-prompt" class="level3">
<h3 class="anchored" data-anchor-id="example-usage-of-the-prompt">Example Usage of the Prompt</h3>
<pre class="prompt"><code>#### Article Text:

[Insert the full text of the provided article here]


#### Research Project Description:

Analyzing changes in human mobility due to the COVID-19 pandemic, focusing on travel behavior before and after the pandemic across different regions and socio-economic groups. 




#### Key Insights:
1. **Insight 1**: Increased use of urban green spaces in higher GDP regions during the COVID-19 pandemic.
   - **Citation**: "The GDP per capita of studied locations also played a role in the direction of changes in UGS use: locations with higher GDP per capita were more likely to experience an increase in UGS use than locations with a lower GDP per capita."

2. **Insight 2**: Stricter COVID-19 policies correlated with decreased use of public parks.
   - **Citation**: "The stringency of COVID-19 policies had a negative impact on UGS use during and after the first lockdowns... A weighted logistic regression revealed that locations reporting decreased use had significantly higher COVID-19 governance stringency."

3. **Insight 3**: Socio-economic disparities influenced the ability to adopt social distancing behaviors.
   - **Citation**: "Low-income and minority communities, facing cascading health challenges, are found to be least able to modify mobility behavior and therefore experienced a disproportionate burden of COVID-19 infection risk during the first wave of the pandemic."

#### Relevance to Research Project:
- **Relevance 1**: The finding that higher GDP regions saw increased use of green spaces aligns with the project's aim to analyze travel behavior changes based on socio-economic factors, highlighting how wealthier areas adapted differently.
- **Relevance 2**: The correlation between strict COVID-19 policies and decreased park use provides insight into how policy stringency influenced mobility, relevant for comparing regions with varying restrictions.
- **Relevance 3**: Understanding that socio-economic disparities impacted mobility behavior adoption is crucial for the project's focus on different socio-economic groups, emphasizing the need to consider inequality in behavioral responses.

#### LinkedIn Post:

üö∂‚Äç‚ôÇÔ∏èüå≥ **Urban Green Spaces and COVID-19: A Study on Usage Patterns and Socio-Economic Disparities** üå≥üö∂‚Äç‚ôÄÔ∏è

A recent study highlights significant changes in the use of urban green spaces (UGS) during the COVID-19 pandemic. Key findings include:

1. **Higher GDP, Higher Usage**: Regions with higher GDP per capita saw increased use of UGS, emphasizing the role of economic conditions in adapting to the pandemic.
2. **Policy Impact**: Stricter COVID-19 policies were linked to decreased use of public parks, reflecting how governance stringency influenced outdoor activities.
3. **Socio-Economic Disparities**: Low-income and minority communities faced greater challenges in adopting social distancing behaviors, leading to higher infection risks.

These insights underscore the importance of considering economic and social factors in urban planning and public health strategies.

#UrbanPlanning #PublicHealth #COVID19 #Research #GreenSpaces #SocioEconomicFactors</code></pre>
<hr>
<p>This prompt can be reused for different articles by inserting the relevant text and adjusting the extracted insights, relevance, and LinkedIn post accordingly.</p>


</section>

 ]]></description>
  <guid>https://gigisung0503.github.io/research/posts/lit_review.html</guid>
  <pubDate>Thu, 27 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>EDA and ETL Convention</title>
  <dc:creator>Gigi Sung</dc:creator>
  <link>https://gigisung0503.github.io/research/posts/eta_etl.html</link>
  <description><![CDATA[ 




<section id="exploratory-data-analysis-eda" class="level1">
<h1>Exploratory Data Analysis (EDA)</h1>
<blockquote class="blockquote">
<p>EDA should be a fun and liberal process üòá but it‚Äôs also important to have a structured approach to ensure a comprehensive understanding of the dataset. This template provides a systematic guide for conducting EDA and preparing the data for further analysis or modeling.</p>
</blockquote>
<section id="mount-google-drive" class="level2">
<h2 class="anchored" data-anchor-id="mount-google-drive">0. Mount Google Drive</h2>
<p>First, you need to mount your Google Drive to the Colab environment. This will allow you to access files stored in your Google Drive.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> google.colab <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> drive</span>
<span id="cb1-2">drive.mount(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/content/drive'</span>)</span></code></pre></div>
<p>Running this code will prompt you to authorize access to your Google Drive. Follow the link provided, select your Google account, and copy the authorization code back into the Colab prompt.</p>
</section>
<section id="set-directory-to-a-specific-folder" class="level2">
<h2 class="anchored" data-anchor-id="set-directory-to-a-specific-folder">0.1. Set Directory to a Specific Folder</h2>
<p>Once your Google Drive is mounted, you can set the working directory to a specific folder within your Google Drive. For example, if you have a folder named <code>MyFolder</code> in your <code>MyDrive</code>, you can set the directory as follows:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the directory to a specific folder in your Google Drive</span></span>
<span id="cb2-4">os.chdir(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/content/drive/MyDrive/MyFolder'</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify the current working directory</span></span>
<span id="cb2-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.getcwd())</span></code></pre></div>
<p>This code changes the current working directory to <code>MyFolder</code> within your Google Drive and prints the current working directory to confirm the change.</p>
</section>
<section id="data-loading-and-initial-inspection" class="level2">
<h2 class="anchored" data-anchor-id="data-loading-and-initial-inspection">1. Data Loading and Initial Inspection</h2>
<section id="import-libraries" class="level3">
<h3 class="anchored" data-anchor-id="import-libraries">1.1 Import Libraries</h3>
<p>Start by importing the necessary libraries for data manipulation and visualization.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span></code></pre></div>
</section>
<section id="load-the-data" class="level3">
<h3 class="anchored" data-anchor-id="load-the-data">1.2 Load the Data</h3>
<p>Load your dataset into a Pandas DataFrame.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'your_dataset.csv'</span>)</span></code></pre></div>
</section>
<section id="initial-inspection" class="level3">
<h3 class="anchored" data-anchor-id="initial-inspection">1.3 Initial Inspection</h3>
<p>Inspect the first few rows, data types, and basic statistics.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the first few rows</span></span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df.head())</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display data types and non-null counts</span></span>
<span id="cb5-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df.info())</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display basic statistics</span></span>
<span id="cb5-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df.describe())</span></code></pre></div>
</section>
</section>
<section id="data-cleaning-and-preprocessing" class="level2">
<h2 class="anchored" data-anchor-id="data-cleaning-and-preprocessing">2. Data Cleaning and Preprocessing</h2>
<section id="handling-missing-values" class="level3">
<h3 class="anchored" data-anchor-id="handling-missing-values">2.1 Handling Missing Values</h3>
<p>Identify and handle missing values.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check for missing values</span></span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df.isnull().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>())</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Fill missing values with the mean</span></span>
<span id="cb6-5">df.fillna(df.mean(), inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</section>
<section id="handling-duplicates" class="level3">
<h3 class="anchored" data-anchor-id="handling-duplicates">2.2 Handling Duplicates</h3>
<p>Check for and remove duplicate rows.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check for duplicates</span></span>
<span id="cb7-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df.duplicated().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>())</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove duplicates</span></span>
<span id="cb7-5">df.drop_duplicates(inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</section>
<section id="data-type-conversion" class="level3">
<h3 class="anchored" data-anchor-id="data-type-conversion">2.3 Data Type Conversion</h3>
<p>Convert data types if necessary.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Convert a column to datetime</span></span>
<span id="cb8-2">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date_column'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_datetime(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date_column'</span>])</span></code></pre></div>
</section>
<section id="feature-engineering" class="level3">
<h3 class="anchored" data-anchor-id="feature-engineering">2.4 Feature Engineering</h3>
<p>Create new features if needed.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Create a new feature from existing columns</span></span>
<span id="cb9-2">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'new_feature'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature1'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature2'</span>]</span></code></pre></div>
</section>
</section>
<section id="univariate-bivariate-and-multivariate-analyses" class="level2">
<h2 class="anchored" data-anchor-id="univariate-bivariate-and-multivariate-analyses">3. Univariate, Bivariate, and Multivariate Analyses</h2>
<section id="univariate-analysis" class="level3">
<h3 class="anchored" data-anchor-id="univariate-analysis">3.1 Univariate Analysis</h3>
<p>Analyze individual variables.</p>
<section id="categorical-variables" class="level4">
<h4 class="anchored" data-anchor-id="categorical-variables">3.1.1 Categorical Variables</h4>
<p>Visualize the distribution of categorical variables.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Bar plot for a categorical variable</span></span>
<span id="cb10-2">sns.countplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical_column'</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df)</span>
<span id="cb10-3">plt.show()</span></code></pre></div>
</section>
<section id="numerical-variables" class="level4">
<h4 class="anchored" data-anchor-id="numerical-variables">3.1.2 Numerical Variables</h4>
<p>Visualize the distribution of numerical variables.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Histogram for a numerical variable</span></span>
<span id="cb11-2">sns.histplot(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numerical_column'</span>], kde<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-3">plt.show()</span></code></pre></div>
</section>
</section>
<section id="bivariate-analysis" class="level3">
<h3 class="anchored" data-anchor-id="bivariate-analysis">3.2 Bivariate Analysis</h3>
<p>Analyze relationships between two variables.</p>
<section id="categorical-vs.-numerical" class="level4">
<h4 class="anchored" data-anchor-id="categorical-vs.-numerical">3.2.1 Categorical vs.&nbsp;Numerical</h4>
<p>Visualize the relationship between categorical and numerical variables.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Box plot</span></span>
<span id="cb12-2">sns.boxplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical_column'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numerical_column'</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df)</span>
<span id="cb12-3">plt.show()</span></code></pre></div>
</section>
<section id="numerical-vs.-numerical" class="level4">
<h4 class="anchored" data-anchor-id="numerical-vs.-numerical">3.2.2 Numerical vs.&nbsp;Numerical</h4>
<p>Visualize the relationship between two numerical variables.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: Scatter plot</span></span>
<span id="cb13-2">sns.scatterplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numerical_column1'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numerical_column2'</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df)</span>
<span id="cb13-3">plt.show()</span></code></pre></div>
</section>
</section>
<section id="multivariate-analysis" class="level3">
<h3 class="anchored" data-anchor-id="multivariate-analysis">3.3 Multivariate Analysis</h3>
<p>Analyze relationships between multiple variables.</p>
<section id="correlation-matrix" class="level4">
<h4 class="anchored" data-anchor-id="correlation-matrix">3.3.1 Correlation Matrix</h4>
<p>Visualize the correlation between numerical variables.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the correlation matrix</span></span>
<span id="cb14-2">corr_matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.corr()</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the heatmap</span></span>
<span id="cb14-5">sns.heatmap(corr_matrix, annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>)</span>
<span id="cb14-6">plt.show()</span></code></pre></div>
</section>
<section id="pair-plot" class="level4">
<h4 class="anchored" data-anchor-id="pair-plot">3.3.2 Pair Plot</h4>
<p>Visualize pairwise relationships in the dataset.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pair plot</span></span>
<span id="cb15-2">sns.pairplot(df)</span>
<span id="cb15-3">plt.show()</span></code></pre></div>
</section>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Summarize your findings and insights from the EDA. This structured approach ensures a comprehensive understanding of the dataset and prepares it for further analysis or modeling.</p>
</section>
</section>
<section id="etl-convention" class="level1">
<h1>ETL Convention</h1>
<p>To construct an ETL (Extract, Transform, Load) pipeline, it‚Äôs essential to follow a structured approach that ensures data is efficiently moved from source systems to a destination system, typically a data warehouse. Here is a detailed convention for building an ETL pipeline:</p>
<p>The following table shows the key libraries used in a typical Python-based ETL pipeline:</p>
<section id="libraries-used" class="level3">
<h3 class="anchored" data-anchor-id="libraries-used">Libraries Used</h3>
<table class="table">
<thead>
<tr class="header">
<th>Library</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>pandas</code></td>
<td>Data manipulation and analysis</td>
</tr>
<tr class="even">
<td><code>numpy</code></td>
<td>Numerical computing and array operations</td>
</tr>
<tr class="odd">
<td><code>requests</code></td>
<td>Making HTTP requests to APIs</td>
</tr>
<tr class="even">
<td><code>sqlalchemy</code></td>
<td>SQL toolkit and Object-Relational Mapping (ORM)</td>
</tr>
<tr class="odd">
<td><code>airflow</code></td>
<td>Workflow management and scheduling</td>
</tr>
<tr class="even">
<td><code>logging</code></td>
<td>Logging for monitoring and debugging</td>
</tr>
<tr class="odd">
<td><code>multiprocessing</code></td>
<td>Parallel processing for performance optimization</td>
</tr>
</tbody>
</table>
</section>
<section id="setup-and-import-libraries" class="level3">
<h3 class="anchored" data-anchor-id="setup-and-import-libraries">1. Setup and Import Libraries</h3>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import necessary libraries</span></span>
<span id="cb16-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb16-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb16-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb16-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sqlalchemy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> create_engine</span>
<span id="cb16-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> logging</span>
<span id="cb16-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> multiprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pool</span></code></pre></div>
</section>
<section id="define-etl-functions" class="level3">
<h3 class="anchored" data-anchor-id="define-etl-functions">2. Define ETL Functions</h3>
<section id="extract-data" class="level4">
<h4 class="anchored" data-anchor-id="extract-data">2.1 Extract Data</h4>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract_data_from_api(api_url):</span>
<span id="cb17-2">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(api_url)</span>
<span id="cb17-3">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.json()</span>
<span id="cb17-4">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data)</span>
<span id="cb17-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract_data_from_db(connection_string, query):</span>
<span id="cb17-8">    engine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_engine(connection_string)</span>
<span id="cb17-9">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_sql(query, con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>engine)</span>
<span id="cb17-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span></code></pre></div>
</section>
<section id="transform-data" class="level4">
<h4 class="anchored" data-anchor-id="transform-data">2.2 Transform Data</h4>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> clean_data(df):</span>
<span id="cb18-2">    df.dropna(inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove missing values</span></span>
<span id="cb18-3">    df.drop_duplicates(inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove duplicates</span></span>
<span id="cb18-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb18-5"></span>
<span id="cb18-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> transform_data(df):</span>
<span id="cb18-7">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_datetime(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert date column to datetime</span></span>
<span id="cb18-8">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'new_feature'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature1'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature2'</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new feature</span></span>
<span id="cb18-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span></code></pre></div>
</section>
<section id="load-data" class="level4">
<h4 class="anchored" data-anchor-id="load-data">2.3 Load Data</h4>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> load_data_to_db(df, connection_string, table_name):</span>
<span id="cb19-2">    engine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_engine(connection_string)</span>
<span id="cb19-3">    df.to_sql(table_name, con<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>engine, if_exists<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replace'</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
</section>
</section>
<section id="define-the-etl-pipeline" class="level3">
<h3 class="anchored" data-anchor-id="define-the-etl-pipeline">3. Define the ETL Pipeline</h3>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> etl_pipeline(api_url, db_connection_string, query, table_name):</span>
<span id="cb20-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract</span></span>
<span id="cb20-3">    df_api <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> extract_data_from_api(api_url)</span>
<span id="cb20-4">    df_db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> extract_data_from_db(db_connection_string, query)</span>
<span id="cb20-5">    </span>
<span id="cb20-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transform</span></span>
<span id="cb20-7">    df_api <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clean_data(df_api)</span>
<span id="cb20-8">    df_db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clean_data(df_db)</span>
<span id="cb20-9">    df_api <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_data(df_api)</span>
<span id="cb20-10">    df_db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_data(df_db)</span>
<span id="cb20-11">    </span>
<span id="cb20-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load</span></span>
<span id="cb20-13">    load_data_to_db(df_api, db_connection_string, table_name)</span>
<span id="cb20-14">    load_data_to_db(df_db, db_connection_string, table_name)</span></code></pre></div>
</section>
<section id="execute-the-etl-pipeline" class="level3">
<h3 class="anchored" data-anchor-id="execute-the-etl-pipeline">4. Execute the ETL Pipeline</h3>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define parameters</span></span>
<span id="cb21-2">api_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.example.com/data'</span></span>
<span id="cb21-3">db_connection_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mysql+pymysql://user:password@host/dbname'</span></span>
<span id="cb21-4">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SELECT * FROM source_table'</span></span>
<span id="cb21-5">table_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'destination_table'</span></span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the ETL pipeline</span></span>
<span id="cb21-8">etl_pipeline(api_url, db_connection_string, query, table_name)</span></code></pre></div>
</section>
<section id="automate-and-schedule-the-pipeline" class="level3">
<h3 class="anchored" data-anchor-id="automate-and-schedule-the-pipeline">5. Automate and Schedule the Pipeline</h3>
<section id="using-apache-airflow" class="level4">
<h4 class="anchored" data-anchor-id="using-apache-airflow">5.1 Using Apache Airflow</h4>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> airflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DAG</span>
<span id="cb22-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> airflow.operators.python_operator <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PythonOperator</span>
<span id="cb22-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb22-4"></span>
<span id="cb22-5">default_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb22-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'owner'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'airflow'</span>,</span>
<span id="cb22-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start_date'</span>: datetime(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2023</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb22-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'retries'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb22-9">}</span>
<span id="cb22-10"></span>
<span id="cb22-11">dag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DAG(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'etl_pipeline'</span>, default_args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>default_args, schedule_interval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'@daily'</span>)</span>
<span id="cb22-12"></span>
<span id="cb22-13">extract_task <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PythonOperator(task_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'extract'</span>, python_callable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>extract_data_from_api, op_args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[api_url], dag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dag)</span>
<span id="cb22-14">transform_task <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PythonOperator(task_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transform'</span>, python_callable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transform_data, op_args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[df], dag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dag)</span>
<span id="cb22-15">load_task <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PythonOperator(task_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'load'</span>, python_callable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>load_data_to_db, op_args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[df, db_connection_string, table_name], dag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dag)</span>
<span id="cb22-16"></span>
<span id="cb22-17">extract_task <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> transform_task <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> load_task</span></code></pre></div>
</section>
</section>
<section id="logging-and-error-handling" class="level3">
<h3 class="anchored" data-anchor-id="logging-and-error-handling">6. Logging and Error Handling</h3>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">logging.basicConfig(level<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>logging.INFO)</span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> etl_pipeline_with_logging(api_url, db_connection_string, query, table_name):</span>
<span id="cb23-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb23-5">        logging.info(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Starting ETL pipeline'</span>)</span>
<span id="cb23-6">        </span>
<span id="cb23-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract</span></span>
<span id="cb23-8">        df_api <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> extract_data_from_api(api_url)</span>
<span id="cb23-9">        df_db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> extract_data_from_db(db_connection_string, query)</span>
<span id="cb23-10">        </span>
<span id="cb23-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transform</span></span>
<span id="cb23-12">        df_api <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clean_data(df_api)</span>
<span id="cb23-13">        df_db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clean_data(df_db)</span>
<span id="cb23-14">        df_api <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_data(df_api)</span>
<span id="cb23-15">        df_db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_data(df_db)</span>
<span id="cb23-16">        </span>
<span id="cb23-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load</span></span>
<span id="cb23-18">        load_data_to_db(df_api, db_connection_string, table_name)</span>
<span id="cb23-19">        load_data_to_db(df_db, db_connection_string, table_name)</span>
<span id="cb23-20">        </span>
<span id="cb23-21">        logging.info(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ETL pipeline completed successfully'</span>)</span>
<span id="cb23-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb23-23">        logging.error(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Error in ETL pipeline: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</section>
<section id="parallel-processing-optional" class="level3">
<h3 class="anchored" data-anchor-id="parallel-processing-optional">7. Parallel Processing (Optional)</h3>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> process_chunk(chunk):</span>
<span id="cb24-2">    chunk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clean_data(chunk)</span>
<span id="cb24-3">    chunk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_data(chunk)</span>
<span id="cb24-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> chunk</span>
<span id="cb24-5"></span>
<span id="cb24-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> parallel_processing(df):</span>
<span id="cb24-7">    chunks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [df[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)]</span>
<span id="cb24-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> Pool(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> p:</span>
<span id="cb24-9">        processed_chunks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> p.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(process_chunk, chunks)</span>
<span id="cb24-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pd.concat(processed_chunks)</span>
<span id="cb24-11"></span>
<span id="cb24-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example usage</span></span>
<span id="cb24-13">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parallel_processing(df)</span></code></pre></div>
<p>By following this template, you can create a robust and efficient ETL pipeline using Python in a Jupyter Notebook. This template covers the essential steps of extracting, transforming, and loading data, along with automation, logging, and parallel processing for performance optimization.</p>


</section>
</section>

 ]]></description>
  <guid>https://gigisung0503.github.io/research/posts/eta_etl.html</guid>
  <pubDate>Sat, 15 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Supply Risk of Minerals</title>
  <dc:creator>Gigi Sung</dc:creator>
  <link>https://gigisung0503.github.io/research/posts/post.html</link>
  <description><![CDATA[ 




<section id="revised-outline-for-base-research-with-focus-on-south-korea" class="level3">
<h3 class="anchored" data-anchor-id="revised-outline-for-base-research-with-focus-on-south-korea">Revised Outline for Base Research with Focus on South Korea</h3>
</section>
<section id="introduction" class="level3">
<h3 class="anchored" data-anchor-id="introduction">Introduction</h3>
<ul>
<li><strong>Brief Overview:</strong> Importance of each mineral globally and specifically to South Korea.</li>
<li><strong>Relevance to South Korean Industries:</strong> Key sectors in South Korea dependent on each mineral (e.g., electronics, automotive, defense).</li>
</ul>
</section>
<section id="lithium-Î¶¨Ìä¨" class="level3">
<h3 class="anchored" data-anchor-id="lithium-Î¶¨Ìä¨">1. Lithium (Î¶¨Ìä¨)</h3>
<section id="a.-overview-and-importance" class="level4">
<h4 class="anchored" data-anchor-id="a.-overview-and-importance">a. Overview and Importance</h4>
<ul>
<li><strong>Applications</strong>: Essential for rechargeable batteries in electronics and EVs.</li>
<li><strong>South Korean Context</strong>: Key for companies like Samsung SDI, LG Chem, and Hyundai.</li>
</ul>
</section>
<section id="b.-global-supply-chain-overview" class="level4">
<h4 class="anchored" data-anchor-id="b.-global-supply-chain-overview">b. Global Supply Chain Overview</h4>
<ul>
<li><strong>Major Producers</strong>: Australia, Chile, China.</li>
<li><strong>Key Companies</strong>: Albemarle, SQM, Tianqi Lithium.</li>
</ul>
</section>
<section id="c.-demand-drivers" class="level4">
<h4 class="anchored" data-anchor-id="c.-demand-drivers">c.&nbsp;Demand Drivers</h4>
<ul>
<li><strong>Global</strong>: EV market, energy storage systems, electronics.</li>
<li><strong>South Korea</strong>: EV production, battery manufacturing for electronics.</li>
</ul>
</section>
<section id="d.-supply-chain-risks" class="level4">
<h4 class="anchored" data-anchor-id="d.-supply-chain-risks">d.&nbsp;Supply Chain Risks</h4>
<ul>
<li><strong>Geopolitical Risks</strong>: Political instability in major producing countries.</li>
<li><strong>Environmental Risks</strong>: High water usage and contamination from mining.</li>
<li><strong>Economic Risks</strong>: Price volatility and dependency on imports.</li>
</ul>
</section>
<section id="e.-recent-trends-and-events" class="level4">
<h4 class="anchored" data-anchor-id="e.-recent-trends-and-events">e. Recent Trends and Events</h4>
<ul>
<li><strong>Global Trends</strong>: Price increases due to EV demand.</li>
<li><strong>Specific to South Korea</strong>: Increased investment in lithium recycling and partnerships with producing countries.</li>
</ul>
</section>
<section id="f.-mitigation-strategies" class="level4">
<h4 class="anchored" data-anchor-id="f.-mitigation-strategies">f.&nbsp;Mitigation Strategies</h4>
<ul>
<li><strong>Diversifying Sources</strong>: Investing in mining projects abroad.</li>
<li><strong>Recycling Initiatives</strong>: Enhancing lithium recycling technologies.</li>
<li><strong>Strategic Reserves</strong>: Building reserves to buffer against supply disruptions.</li>
</ul>
</section>
<section id="g.-conclusion" class="level4">
<h4 class="anchored" data-anchor-id="g.-conclusion">g. Conclusion</h4>
<ul>
<li><strong>Summary</strong>: Importance of lithium and need for robust supply chain management for South Korea.</li>
</ul>
</section>
</section>
<section id="cobalt-ÏΩîÎ∞úÌä∏" class="level3">
<h3 class="anchored" data-anchor-id="cobalt-ÏΩîÎ∞úÌä∏">2. Cobalt (ÏΩîÎ∞úÌä∏)</h3>
<section id="a.-overview-and-importance-1" class="level4">
<h4 class="anchored" data-anchor-id="a.-overview-and-importance-1">a. Overview and Importance</h4>
<ul>
<li><strong>Applications</strong>: Batteries, aerospace, industrial applications.</li>
<li><strong>South Korean Context</strong>: Key for battery manufacturers and high-tech industries.</li>
</ul>
</section>
<section id="b.-global-supply-chain-overview-1" class="level4">
<h4 class="anchored" data-anchor-id="b.-global-supply-chain-overview-1">b. Global Supply Chain Overview</h4>
<ul>
<li><strong>Major Producers</strong>: DRC, Russia, Australia.</li>
<li><strong>Key Companies</strong>: Glencore, China Molybdenum, ERG.</li>
</ul>
</section>
<section id="c.-demand-drivers-1" class="level4">
<h4 class="anchored" data-anchor-id="c.-demand-drivers-1">c.&nbsp;Demand Drivers</h4>
<ul>
<li><strong>Global</strong>: Battery production, aerospace.</li>
<li><strong>South Korea</strong>: High-capacity battery production, high-tech manufacturing.</li>
</ul>
</section>
<section id="d.-supply-chain-risks-1" class="level4">
<h4 class="anchored" data-anchor-id="d.-supply-chain-risks-1">d.&nbsp;Supply Chain Risks</h4>
<ul>
<li><strong>Geopolitical Risks</strong>: Instability in the DRC.</li>
<li><strong>Ethical Risks</strong>: Child labor and unethical mining practices.</li>
<li><strong>Economic Risks</strong>: Price volatility and supply concentration.</li>
</ul>
</section>
<section id="e.-recent-trends-and-events-1" class="level4">
<h4 class="anchored" data-anchor-id="e.-recent-trends-and-events-1">e. Recent Trends and Events</h4>
<ul>
<li><strong>Global Trends</strong>: Ethical sourcing initiatives, investment in cobalt-free batteries.</li>
<li><strong>Specific to South Korea</strong>: Efforts to secure ethical supply chains and diversify sources.</li>
</ul>
</section>
<section id="f.-mitigation-strategies-1" class="level4">
<h4 class="anchored" data-anchor-id="f.-mitigation-strategies-1">f.&nbsp;Mitigation Strategies</h4>
<ul>
<li><strong>Ethical Sourcing</strong>: Ensuring cobalt is sourced responsibly.</li>
<li><strong>Diversifying Supply</strong>: Seeking alternative suppliers and recycling.</li>
<li><strong>Technological Innovation</strong>: Research into cobalt-free batteries.</li>
</ul>
</section>
<section id="g.-conclusion-1" class="level4">
<h4 class="anchored" data-anchor-id="g.-conclusion-1">g. Conclusion</h4>
<ul>
<li><strong>Summary</strong>: Cobalt‚Äôs critical role and the need for ethical and stable supply chains for South Korea.</li>
</ul>
</section>
</section>
<section id="nickel-ÎãàÏºà" class="level3">
<h3 class="anchored" data-anchor-id="nickel-ÎãàÏºà">3. Nickel (ÎãàÏºà)</h3>
<section id="a.-overview-and-importance-2" class="level4">
<h4 class="anchored" data-anchor-id="a.-overview-and-importance-2">a. Overview and Importance</h4>
<ul>
<li><strong>Applications</strong>: Stainless steel, batteries, alloys.</li>
<li><strong>South Korean Context</strong>: Important for steel production and battery manufacturing.</li>
</ul>
</section>
<section id="b.-global-supply-chain-overview-2" class="level4">
<h4 class="anchored" data-anchor-id="b.-global-supply-chain-overview-2">b. Global Supply Chain Overview</h4>
<ul>
<li><strong>Major Producers</strong>: Indonesia, Philippines, Russia.</li>
<li><strong>Key Companies</strong>: Vale, Norilsk Nickel, BHP.</li>
</ul>
</section>
<section id="c.-demand-drivers-2" class="level4">
<h4 class="anchored" data-anchor-id="c.-demand-drivers-2">c.&nbsp;Demand Drivers</h4>
<ul>
<li><strong>Global</strong>: Steel and EV battery production.</li>
<li><strong>South Korea</strong>: Steel industry, EV battery manufacturing.</li>
</ul>
</section>
<section id="d.-supply-chain-risks-2" class="level4">
<h4 class="anchored" data-anchor-id="d.-supply-chain-risks-2">d.&nbsp;Supply Chain Risks</h4>
<ul>
<li><strong>Geopolitical Risks</strong>: Dependency on specific regions.</li>
<li><strong>Environmental Risks</strong>: Significant environmental impact from mining.</li>
<li><strong>Economic Risks</strong>: Market volatility.</li>
</ul>
</section>
<section id="e.-recent-trends-and-events-2" class="level4">
<h4 class="anchored" data-anchor-id="e.-recent-trends-and-events-2">e. Recent Trends and Events</h4>
<ul>
<li><strong>Global Trends</strong>: Increased demand from EV market.</li>
<li><strong>Specific to South Korea</strong>: Investment in sustainable sourcing and recycling.</li>
</ul>
</section>
<section id="f.-mitigation-strategies-2" class="level4">
<h4 class="anchored" data-anchor-id="f.-mitigation-strategies-2">f.&nbsp;Mitigation Strategies</h4>
<ul>
<li><strong>Sustainable Sourcing</strong>: Investing in environmentally friendly mining.</li>
<li><strong>Recycling</strong>: Enhancing nickel recycling processes.</li>
<li><strong>Strategic Partnerships</strong>: Long-term contracts with suppliers.</li>
</ul>
</section>
<section id="g.-conclusion-2" class="level4">
<h4 class="anchored" data-anchor-id="g.-conclusion-2">g. Conclusion</h4>
<ul>
<li><strong>Summary</strong>: Nickel‚Äôs importance to South Korean industries and strategies for mitigating supply risks.</li>
</ul>
</section>
</section>
<section id="manganese-ÎßùÍ∞Ñ" class="level3">
<h3 class="anchored" data-anchor-id="manganese-ÎßùÍ∞Ñ">4. Manganese (ÎßùÍ∞Ñ)</h3>
<section id="a.-overview-and-importance-3" class="level4">
<h4 class="anchored" data-anchor-id="a.-overview-and-importance-3">a. Overview and Importance</h4>
<ul>
<li><strong>Applications</strong>: Steel production, batteries, chemical catalysts.</li>
<li><strong>South Korean Context</strong>: Key for steel manufacturing and battery technology.</li>
</ul>
</section>
<section id="b.-global-supply-chain-overview-3" class="level4">
<h4 class="anchored" data-anchor-id="b.-global-supply-chain-overview-3">b. Global Supply Chain Overview</h4>
<ul>
<li><strong>Major Producers</strong>: South Africa, Australia, China.</li>
<li><strong>Key Companies</strong>: South32, Eramet, Assmang.</li>
</ul>
</section>
<section id="c.-demand-drivers-3" class="level4">
<h4 class="anchored" data-anchor-id="c.-demand-drivers-3">c.&nbsp;Demand Drivers</h4>
<ul>
<li><strong>Global</strong>: Steel and battery industries.</li>
<li><strong>South Korea</strong>: Steel production, battery manufacturing.</li>
</ul>
</section>
<section id="d.-supply-chain-risks-3" class="level4">
<h4 class="anchored" data-anchor-id="d.-supply-chain-risks-3">d.&nbsp;Supply Chain Risks</h4>
<ul>
<li><strong>Geopolitical Risks</strong>: Instability in producing regions.</li>
<li><strong>Environmental Risks</strong>: Environmental impact of mining and refining.</li>
<li><strong>Economic Risks</strong>: Price volatility linked to steel market.</li>
</ul>
</section>
<section id="e.-recent-trends-and-events-3" class="level4">
<h4 class="anchored" data-anchor-id="e.-recent-trends-and-events-3">e. Recent Trends and Events</h4>
<ul>
<li><strong>Global Trends</strong>: Growing demand from battery sector.</li>
<li><strong>Specific to South Korea</strong>: Efforts to secure stable supply and enhance recycling.</li>
</ul>
</section>
<section id="f.-mitigation-strategies-3" class="level4">
<h4 class="anchored" data-anchor-id="f.-mitigation-strategies-3">f.&nbsp;Mitigation Strategies</h4>
<ul>
<li><strong>Diversifying Supply</strong>: Seeking new sources and enhancing recycling.</li>
<li><strong>Sustainable Practices</strong>: Investing in environmentally friendly mining.</li>
<li><strong>Strategic Reserves</strong>: Building reserves to cushion against disruptions.</li>
</ul>
</section>
<section id="g.-conclusion-3" class="level4">
<h4 class="anchored" data-anchor-id="g.-conclusion-3">g. Conclusion</h4>
<ul>
<li><strong>Summary</strong>: Manganese‚Äôs role in South Korean industries and strategies for securing supply.</li>
</ul>
</section>
</section>
<section id="tungsten-ÌÖÖÏä§ÌÖê" class="level3">
<h3 class="anchored" data-anchor-id="tungsten-ÌÖÖÏä§ÌÖê">5. Tungsten (ÌÖÖÏä§ÌÖê)</h3>
<section id="a.-overview-and-importance-4" class="level4">
<h4 class="anchored" data-anchor-id="a.-overview-and-importance-4">a. Overview and Importance</h4>
<ul>
<li><strong>Applications</strong>: Hard metals, superalloys, high-temperature applications.</li>
<li><strong>South Korean Context</strong>: Important for industrial machinery, aerospace, and military.</li>
</ul>
</section>
<section id="b.-global-supply-chain-overview-4" class="level4">
<h4 class="anchored" data-anchor-id="b.-global-supply-chain-overview-4">b. Global Supply Chain Overview</h4>
<ul>
<li><strong>Major Producers</strong>: China, Russia, Vietnam.</li>
<li><strong>Key Companies</strong>: China Minmetals, Wolfram Company, Chongyi Zhangyuan Tungsten.</li>
</ul>
</section>
<section id="c.-demand-drivers-4" class="level4">
<h4 class="anchored" data-anchor-id="c.-demand-drivers-4">c.&nbsp;Demand Drivers</h4>
<ul>
<li><strong>Global</strong>: Industrial applications, aerospace, military.</li>
<li><strong>South Korea</strong>: High-tech manufacturing, defense.</li>
</ul>
</section>
<section id="d.-supply-chain-risks-4" class="level4">
<h4 class="anchored" data-anchor-id="d.-supply-chain-risks-4">d.&nbsp;Supply Chain Risks</h4>
<ul>
<li><strong>Geopolitical Risks</strong>: Dependency on China and other specific countries.</li>
<li><strong>Environmental Risks</strong>: Significant environmental impacts of mining.</li>
<li><strong>Economic Risks</strong>: Price volatility due to concentrated supply.</li>
</ul>
</section>
<section id="e.-recent-trends-and-events-4" class="level4">
<h4 class="anchored" data-anchor-id="e.-recent-trends-and-events-4">e. Recent Trends and Events</h4>
<ul>
<li><strong>Global Trends</strong>: Efforts to diversify supply and reduce dependency on China.</li>
<li><strong>Specific to South Korea</strong>: Investments in domestic production and recycling.</li>
</ul>
</section>
<section id="f.-mitigation-strategies-4" class="level4">
<h4 class="anchored" data-anchor-id="f.-mitigation-strategies-4">f.&nbsp;Mitigation Strategies</h4>
<ul>
<li><strong>Diversifying Sources</strong>: Seeking new suppliers and investing in recycling.</li>
<li><strong>Sustainable Practices</strong>: Developing environmentally friendly mining techniques.</li>
<li><strong>Strategic Reserves</strong>: Building reserves to manage supply disruptions.</li>
</ul>
</section>
<section id="g.-conclusion-4" class="level4">
<h4 class="anchored" data-anchor-id="g.-conclusion-4">g. Conclusion</h4>
<ul>
<li><strong>Summary</strong>: Tungsten‚Äôs critical applications and the need for secure supply chains for South Korea.</li>
</ul>
</section>
</section>
<section id="conclusion" class="level3">
<h3 class="anchored" data-anchor-id="conclusion">Conclusion</h3>
<ul>
<li><strong>Summary</strong>: Importance of each mineral to South Korea‚Äôs economy and industries.</li>
<li><strong>Recommendations</strong>: Strategies for mitigating supply chain risks and ensuring stable supplies of critical minerals.</li>
</ul>
</section>
<section id="next-steps" class="level3">
<h3 class="anchored" data-anchor-id="next-steps">Next Steps</h3>
<ol type="1">
<li><strong>Detailed Data Collection</strong>: Gather specific data on supply chain disruptions, geopolitical events, and environmental impacts for each mineral specific to South Korea.</li>
<li><strong>Trend Analysis</strong>: Perform detailed time-series analysis on price data and supply risks.</li>
<li><strong>Risk Mitigation Strategies</strong>: Develop comprehensive strategies for mitigating supply chain risks, including diversifying sources, enhancing recycling, and developing alternative technologies.</li>
<li><strong>Predictive Modeling</strong>: Use machine learning algorithms to predict future supply chain disruptions and price changes based on historical data.</li>
</ol>
<p>By focusing on South Korea, this research can provide valuable insights and recommendations to the South Korean government for managing and securing the supply of critical minerals.</p>


</section>

 ]]></description>
  <guid>https://gigisung0503.github.io/research/posts/post.html</guid>
  <pubDate>Sat, 22 May 2021 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
